{"version":3,"sources":["components/Note.js","components/AddNote.js","components/NotesList.js","components/Search.js","App.js","index.js"],"names":["Note","_ref","id","text","date","handleDeleteNote","react_default","a","createElement","className","index_esm","size","onClick","AddNote","handleAddNote","_useState","useState","_useState2","Object","slicedToArray","noteText","setNoteText","placeholder","cols","rows","value","onChange","event","target","length","trim","NotesList","notes","map","note","components_Note","key","components_AddNote","Search","handleSearchNote","type","App","nanoid","setNotes","_useState3","_useState4","searchText","setSearchText","components_Search","components_NotesList","filter","toLowerCase","includes","Date","newNote","toLocaleDateString","newNotes","concat","toConsumableArray","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.cdd35279.chunk.js","sourcesContent":["import React from 'react'\nimport { MdDeleteForever } from 'react-icons/md'\n\nconst Note = ({id, text, date, handleDeleteNote}) => {\n  return (\n    <div className='note'>\n        <span>{text}</span>\n        <div className=\"note-footer\">\n            <small>{date}</small>\n            <MdDeleteForever className='delete-icon' size='1.3em' onClick={() => handleDeleteNote(id)}/>\n        </div>\n    </div>\n  )\n}\n\nexport default Note","import React, { useState } from \"react\";\n\nconst AddNote = ({handleAddNote}) => {\n  const [noteText, setNoteText] = useState(\"\");\n  const characterLimit = 200\n\n  const handleChange = (event) => {\n    if (characterLimit - event.target.value.length >= 0){\n    setNoteText(event.target.value)\n    }\n  }\n\n  const handleSaveClick = () => {\n    if(noteText.trim().length > 0){\n    handleAddNote(noteText)\n    setNoteText('')\n    }\n  }\n\n  return (\n    <div className=\"note new\">\n      <textarea\n        placeholder=\"type to add a note\"\n        cols=\"10\"\n        rows=\"8\"\n        value={noteText}\n        onChange={handleChange}\n      ></textarea>\n      <div className=\"note-footer\">\n        <small>{characterLimit - noteText.length} remaining</small>\n        <button className=\"save\" onClick={handleSaveClick}>Save</button>\n      </div>\n    </div>\n  );\n};\n\nexport default AddNote;\n","import React from \"react\";\nimport Note from \"./Note\";\nimport AddNote from \"./AddNote\";\n\nconst NotesList = ({ notes, handleAddNote, handleDeleteNote }) => {\n  return (\n    <div className=\"notes-list\">\n      {notes.map((note) => (\n        <Note key={note.id} id={note.id} text={note.text} date={note.date} handleDeleteNote={handleDeleteNote} />\n      ))}\n      <AddNote handleAddNote={handleAddNote} />\n    </div>\n  );\n};\n\nexport default NotesList;\n","import React from 'react'\nimport {MdSearch} from 'react-icons/md'\n\nconst Search = ({handleSearchNote}) => {\n  return (\n    <div className='search'>\n        <MdSearch className='search-icons' size='1.3em' />\n        <input onChange={(event) => handleSearchNote(event.target.value)} type=\"text\" placeholder='search here...' />\n    </div>\n  )\n}\n\nexport default Search","import React, { useState } from \"react\";\nimport { nanoid } from \"nanoid\";\nimport NotesList from \"./components/NotesList\";\nimport Search from \"./components/Search\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([\n    {\n      id: nanoid(),\n      text: \"this is a note\",\n      date: \"01/01/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"this is a note\",\n      date: \"01/01/2021\",\n    },\n    {\n      id: nanoid(),\n      text: \"this is anotha one\",\n      date: \"01/01/2021\",\n    },\n  ]);\n\n  const [searchText, setSearchText] = useState('')\n\n  const addNote = (text) => {\n    const date = new Date()\n    const newNote = {\n      id: nanoid(),\n      text: text,\n      date: date.toLocaleDateString()\n    }\n\n    const newNotes = [...notes, newNote]\n    setNotes(newNotes)\n  }\n  \n  const deleteNote = (id) => {\n    const newNotes = notes.filter((note) => note.id !== id)\n    setNotes(newNotes)\n  }\n\n  return (\n    <div className=\"container\">\n      <Search handleSearchNote={setSearchText}/>\n      <NotesList notes={notes.filter((note) => note.text.toLowerCase().includes(searchText))} handleAddNote={addNote} handleDeleteNote={deleteNote} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n"],"sourceRoot":""}